import { useSession, signIn, signOut } from "next-auth/react"
import { unstable_getServerSession } from "next-auth/next"
import {authOptions} from './api/auth/[...nextauth]'
import styled from "styled-components"
import { useRouter } from 'next/router'
import { Button } from "./addProduct"
import Navigation from "../../components/navigation"
import { Wrapper } from "./index"
import Head from "next/head"
import { Player } from "@lottiefiles/react-lottie-player"
import { Column, Email, User, UserProfile, Image, Row} from "./index"

export const SmallButton = styled.button`
padding: 10px 15px;
background-color:var(--black-color);
border:1px solid var(--black-color);
color:var(--white-color);
font-size:1em;
font-family:'Quicksand';
font-weight:600;
border-radius:12px;
border:none;
margin:0.5rem 0;
width: 10rem;
cursor:pointer;

&:hover {
  background-color:var(--yellow-color);
  color:var(--black-color);
  transition: 0.3s ease;
}
`

export default function Profile() {
  const { data: session } = useSession()
  const router = useRouter()
  if (session) {
    return (
      <>
        <Head>
          <title>Product Info</title>
          <link href="https://fonts.googleapis.com/css2?family=Heebo:wght@100;200;300;400;500;600;700;800;900&family=Quicksand:wght@300;400;500;600;700&display=swap" rel="stylesheet"/>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico"/>
        </Head>


        <Wrapper style={{flexDirection:'column', minHeight:'100vh', justifyContent:'flex-start'}}>
        <Navigation />

        <Row style={{width:'50%', height:'100%', justifyContent:'space-between', alignItems:'center' }}>
        <Player 
        autoplay
        loop
        src='animations/bee2.json'
        style={{height: '300px', width: '300px'}}
        />

        <UserProfile style={{marginBottom:'0rem'}}>
          <Image style={{width:'250px', height:'250px', padding:'1rem'}} src={session.user.image}/>
          <User style={{fontSize:'1rem'}}>Currently signed in as:</User>
          <User style={{marginTop:'0rem'}}>{session.user.name}</User>
          <Email>{session.user.email}</Email>
          <SmallButton onClick={() => signOut()} style={{marginTop:'3rem'}}>Sign out</SmallButton>
        </UserProfile>
        </Row>

      </Wrapper>
      </>
    )
  }
  return (
    <>
      Not signed in <br />
      <SmallButton onClick={() => signIn()}>Sign in</SmallButton>
    </>
  )
}

export async function getServerSideProps(context) {
    const session = await unstable_getServerSession(context.req, context.res, authOptions)

    if (!session) {
        return {
            redirect: {
                destination: "/api/auth/signin",
                permanent: false,
            },
        }
    }
    
    return {
        props: { session },
    }
}