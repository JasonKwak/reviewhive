import Head from 'next/head'
import Image from 'next/image'
import styles from '@/styles/Home.module.css'
import {useEffect, useState} from 'react'
import axios from 'axios'
import { useRouter } from 'next/router'
import { PlusCircleIcon } from '@heroicons/react/24/solid'
import Navigation from '../../../components/navigation'
import {prisma} from '../../../server/db/client'
import styled from 'styled-components'
import Link from 'next/link'
import { unstable_getServerSession } from "next-auth/next"
import {authOptions} from '../api/auth/[...nextauth]'
import { Wrapper } from '../index'


const List = styled.div`
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-column-gap: 20px;
  grid-row-gap: 15px;
  justify-items: center;
  padding:0;
`

const Column = styled.div`
display:flex;
flex-direction:column;
gap:0.25rem;
margin-top:0.5rem;
`

const ProductImageContainer = styled.div`
  width: 300px;
  height: 300px;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  background-color:white;
  margin-bottom: 0.5rem;
  padding:2rem;
  z-index:3;
  &:hover {
    filter: brightness(30%);
    transition:0.5s;
  }
`;

const ProductImage2 = styled.img`
width: 100%;
height: auto;
object-fit: cover;
border-radius:5px;
background-color:white;
`


const ProductBox = styled.div`
padding: 2rem 3rem;
border-radius:2rem;
`

export const GraySmall = styled.div`
font-size:0.75rem;
color:var(--gray-color);
font-family:'Heebo';
`

export const GrayCont = styled.div`
text-align:right;
`

export const ProductBig = styled.div`
text-align:left;
font-size:1rem;
color:var(--black-color);
font-weight:500;
font-family:'Heebo', sans-serif;
text-decoration:none;
`

export const ProductSmall = styled.div`
text-align:left;
font-size:0.9rem;
font-family: 'Quicksand', sans-serif;
color: var(--gray-color);
`

const ImageCont = styled.div`
position:relative;
`

const Row = styled.div`
display:flex;
flex-direction:row;
justify-content:space-between;
`

const ProductInfos = styled.div`
display:flex;
flex-direction:column;
`

const Link2 = styled(Link)`
text-decoration:none;
`

export const IconCont = styled.div`
position:fixed;
bottom:3rem;
right:10rem;
`

export const Price = styled.div`
display:flex;
flex-direction:row;
align-items:center;
`

export default function Home( {products, productId, initialValues} ) {

  function capitalizeFirstLetter(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
}
  const router =  useRouter()

  return (
    <>
      <Head>
        <title>Review Hive</title>
        <link href="https://fonts.googleapis.com/css2?family=Heebo:wght@100;200;300;400;500;600;700;800;900&family=Quicksand:wght@300;400;500;600;700&display=swap" rel="stylesheet"/>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico"/>
      </Head>

      <Wrapper style={{flexDirection:'column'}}>
      <Navigation/>
        <List>

          {products.map((product) => {
          return (
              <ProductBox key={product.id}>

                  <ImageCont>
                    <Link2 href={`/products/${product.id}`}>
                    <ProductImageContainer>
                      <ProductImage2 src={product.image} alt={product.image} width="300" height="300"/>
                    </ProductImageContainer>
                    </Link2>
                  <GraySmall style={{color:'var(--white-color)',position:'absolute', top:'0', right:'0', margin:'0.5rem 0.75rem'}}>PRODUCT ID #{product.id} </GraySmall>
                  </ImageCont>

                  
                  <ProductInfos>

                    <Row style={{alignItems:'flex-start'}}>
                    <Link2 href={`/products/${product.id}`}>
                        <ProductBig style={{width:'100%', lineHeight:'1.5rem'}}>{capitalizeFirstLetter(product.product)}</ProductBig>
                    </Link2>
                    <Price>
                    <div style={{fontFamily:"'Heebo'"}}>$</div>
                    <ProductBig>{product.price / 100}</ProductBig>
                    </Price>
                    </Row>

                    <Column>
                      <ProductSmall>{capitalizeFirstLetter(product.description)}</ProductSmall>
                      <ProductSmall>{capitalizeFirstLetter(product.brand)}</ProductSmall>
                      <ProductSmall>{capitalizeFirstLetter(product.color)}</ProductSmall>
                    </Column>

                    <GrayCont>
                      <GraySmall>posted by: {product.user.name}</GraySmall>
                      <GraySmall>created: {product.createdAt.substring(0, 10)} </GraySmall>
                    </GrayCont>

                  </ProductInfos>

              </ProductBox>
          )
          })}
          
        </List>
        
        <IconCont>
        <PlusCircleIcon style={{color:'var(--black-color)'}} onClick={() => router.push("/addProduct")} className={styles.icon}/>
        </IconCont>

      </Wrapper>
    </>
  )
}


export async function getServerSideProps() {
  const products = await prisma.product.findMany({
    include: {
      user: true,
  }} );

  return {
    props: {
      products: JSON.parse(JSON.stringify(products)),
    },
  }

  const session = await unstable_getServerSession(context.req, context.res, authOptions)

  if (!session) {
      return {
          redirect: {
              destination: "/api/auth/signin",
              permanent: false,
          },
      }
  }
  
  return {
      props: { session },
  }
}
